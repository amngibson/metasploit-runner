class ExploitRunDescription
  attr_accessor :connection_url, :port, :uri, :use_ssl, :token, :workspace_name, :nexpose_console_name, :device_ip_to_scan
  @@port_value = ''
  @@uri_value = ''
  @@use_ssl_value = ''
  @@device_ip_to_scan_value = ''

  def initialize(connection_url, port, uri, use_ssl, token, workspace_name, nexpose_console_name, device_ip_to_scan)
    self.connection_url = connection_url
    @@port_value = port
    @@uri_value = uri
    @@use_ssl_value = use_ssl
    self.token = token
    self.workspace_name = workspace_name
    self.nexpose_console_name = nexpose_console_name
    @@device_ip_to_scan_value = device_ip_to_scan
  end

  def verify
    raise StandardError, CONSTANTS::REQUIRED_TOKEN_MESSAGE if token.nil? || token.empty?
    raise StandardError, CONSTANTS::REQUIRED_CONNECTION_URL_MESSAGE if connection_url.nil? || connection_url.empty?
    raise StandardError, CONSTANTS::REQUIRED_DEVICE_IP_TO_SCAN_MESSAGE if @@device_ip_to_scan_value.nil? || @@device_ip_to_scan_value.empty?
    raise StandardError, CONSTANTS::REQUIRED_WORKSPACE_MESSAGE if workspace_name.nil? || workspace_name.empty?
  end

  def get_options
    {:host => self.connection_url,
     :port => self.port,
     :token => self.token,
     :uri => self.uri,
     :ssl => self.use_ssl}
  end

  def device_ip_to_scan=(value)
    @@device_ip_to_scan_value = value
  end

  def device_ip_to_scan
    "http://#{@@device_ip_to_scan_value}"
  end

  def port=(value)
    @@port_value = value
  end

  def port
    get_value(@@port_value, CONSTANTS::DEFAULT_PORT)
  end

  def uri=(value)
    @@uri_value = value
  end

  def uri
    get_value(@@uri_value, CONSTANTS::DEFAULT_URI)
  end

  def use_ssl=(value)
    @@use_ssl_value = value
  end

  def use_ssl
    (@@use_ssl_value != false) ? true : false
  end

  def get_value(value_to_check, default)
    (value_to_check.nil? || value_to_check.empty?) ? default : value_to_check
  end

end